---

- name: "4.1.1.1 | PATCH | Ensure auditd is installed"
  package:
      name: ['audit', 'audit-libs']
      state: present
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - rule_4_1_1_1
  notify: restart auditd
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - rule_4.1.1.1

- name: "4.1.1.2 | PATCH | Ensure auditd service is enabled and running"
  service:
      name: auditd
      state: started
      enabled: true
  when:
      - not skip_for_travis
      - rule_4_1_1_2
      - ansible_connection != 'docker'
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.1.2

- name: "4.1.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled"
  block:
      - name: "4.1.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled"
        replace:
            dest: /etc/default/grub
            regexp: ^(GRUB_CMDLINE_LINUX=)(?:")(?!.*audit=1)(.+)(?:")$
            replace: '\1"\2 audit=1"'
        register: audit_grub
        notify: grub2cfg

      - name: "4.1.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled"
        set_fact:
            change_requires_reboot: true
        when:
            - audit_grub.changed

  when:
      - rule_4_1_1_3
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.1.3

- name: "4.1.1.4 | PATCH | Ensure audit_backlog_limit is sufficient"
  block:
      - name: "4.1.1.4 | AUDIT | Ensure audit_backlog_limit is sufficient | Grep GRUB_CMDLINE_LINUX parameter"
        shell: grep 'GRUB_CMDLINE_LINUX=' /etc/default/grub | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        check_mode: false
        register: cis_4_1_1_4_grub_cmdline_linux_settings

      - name: "4.1.1.4 | PATCH | Ensure audit_backlog_limit is sufficient | Set audit_backlog_limit if not configured"
        lineinfile:
            dest: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX='
            line: 'GRUB_CMDLINE_LINUX="{{ cis_4_1_1_4_grub_cmdline_linux_settings.stdout }} audit_backlog_limit={{ audit_backlog_limit }}"'
        register: grub_backup_new
        notify: grub2cfg
        when: '"audit_backlog_limit" not in cis_4_1_1_4_grub_cmdline_linux_settings.stdout'

      - name: "4.1.1.4 | PATCH | Ensure audit_backlog_limit is sufficient | Adjust audit_backlog_limit if exists"
        replace:
            dest: /etc/default/grub
            regexp: 'audit_backlog_limit=([^\D]+)'
            replace: 'audit_backlog_limit={{ audit_backlog_limit }}'
        register: grub_backup_updated
        notify: grub2cfg
        when: '"audit_backlog_limit" in cis_4_1_1_4_grub_cmdline_linux_settings.stdout'

      - name: "4.1.1.4 | PATCH | Ensure audit_backlog_limit is sufficient"
        set_fact:
            change_requires_reboot: true
        when:
            - grub_backup_updated.changed or
              grub_backup_new.changed

  when:
      - rule_4_1_1_4
  tags:
      - level2-server
      - level2-workstation
      - grub
      - patch
      - rule_4.1.1.4