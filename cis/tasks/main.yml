---
# tasks file for CIS
- name: Check OS version and family
  fail:
      msg: "This role can only be run against RHEL OS only. {{ ansible_distribution }} {{ ansible_distribution_major_version }} is not supported."
  when:
      - ansible_os_family == 'RedHat'
      - os_check
  tags:
      - always

- name: Check ansible version
  fail:
      msg: You must use ansible 2.9 or greater
  when: not ansible_version.full is version_compare('2.9', '>=')
  tags:
      - always

- name: Check crypto-policy input
  assert:
      that: crypto_policy in allowed_crypto_policies


- name: Check bootloader_password_hash variable has been changed
  assert:
      that: bootloader_password_hash != 'grub.pbkdf2.sha512.changethispart'
      msg: "This role will not be able to run single user password commands as  bootloader_password_hash variable has not been set"
  when:
      - set_boot_pass
      - rule_1_5_1

- name: "check sugroup exists if used"
  block:
      - name: "Check su group exists if defined"
        command: grep -w "{{ sugroup }}" /etc/group
        register: sugroup_exists
        changed_when: false
        failed_when: sugroup_exists.rc >= 2
        tags:
            - skip_ansible_lint

      - name: Check sugroup if defined exists before continuing
        assert:
            that: sugroup_exists.rc == 0
            msg: "The variable sugroup is defined but does not exist please rectify"
  when:
      - sugroup is defined
      - rule_5_6
  tags:
      - rule_5.6

- name: Import prereq checks
  import_tasks: check_prereqs.yml
  tags:
      - always
      - prereqs

- name: Setup rules if container
  block:
      - name: Discover and set container variable if required
        set_fact:
            system_is_container: true

      - name: Load variable for container
        include_vars:
            file: "{{ container_vars_file }}"

      - name: output if discovered is a container
        debug:
            msg: system has been discovered as a container
        when:
            - system_is_container
  when:
      - ansible_connection == 'docker' or
        ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"]
  tags:
      - container_discovery
      - always

- name: Import preliminary tasks
  import_tasks: prelim.yml
  tags:
      - prelim_tasks
      - always

- name: Import pre remediation audit
  import_tasks: pre_remediation_audit.yml
  when:
      - run_audit
  tags:
      - run_audit

- name: Gather the package facts
  package_facts:
      manager: auto
  tags:
      - always

- name: Include OS specific variables
  include_vars: "{{ ansible_distribution }}.yml"
  tags:
      - always

- name: Run parse etc password for user variables
  import_tasks: parse_etc_password.yml
  when:
      - section5 or
        section6

- name: Import section 1 tasks
  import_tasks: section_1/main.yml
  when: section1
  tags:
      - section1

- name: Import section 2 tasks
  import_tasks: section_2/main.yml
  tags:
      - section2
  when: section2

- name: Import section 3 tasks
  import_tasks: section_3/main.yml
  when: section3
  tags:
      - section3

- name: Import section 4 tasks
  import_tasks: section_4/main.yml
  when: section4
  tags:
      - section4

- name: Import section 5 tasks
  import_tasks: section_5/main.yml
  when: section5
  tags:
      - section5

- name: Import section 6 tasks
  import_tasks: section_6/main.yml
  when: section6
  tags:
      - section6

- name: flush handlers
  meta: flush_handlers

- import_tasks: post.yml
  tags:
      - post_tasks
      - always

- name: Import post remediation task
  import_tasks: post_remediation_audit.yml
  when:
      - run_audit
  tags:
      - run_audit

- name: Show Audit Summary
  debug:
      msg: "{{ audit_results.split('\n') }}"
  when:
      - run_audit
  tags:
      - run_audit
